/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
};

&mt { flavor = "tap-preferred"; };

/ {
    behaviors {
        mt_slower: mt_slower {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SLOWER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <280>;
        };
    };

    combos {
        compatible = "zmk,combos";

        toggle_gaming {
            bindings = <&tog 6>;
            key-positions = <37 38 39 40>;
        };
    };

    macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp TAB>;
            label = "ALT_TAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                  &kp W           &kp E        &kp R             &kp T         &kp Y      &kp U              &kp I        &kp O       &kp P               &none
&none  &mt_slower LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G         &kp H      &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RALT L  &mt RGUI SEMICOLON  &none
&none  &mt LCTRL Z            &kp X           &kp C        &kp V             &kp B         &kp N      &kp M              &kp COMMA    &kp DOT     &kp FSLH            &none
                                              &none        &lt 4 ENTER       &lt 1 BSPC    &lt 2 TAB  &lt 3 SPACE        &none
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans             &trans   &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans             &trans   &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp PRINTSCREEN    &trans   &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans             &kp DEL  &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans     &trans     &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp CAPS    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp INSERT  &trans
                        &trans  &trans  &trans    &trans    &trans     &trans
            >;
        };

        sym_layer {
            bindings = <
&trans  &kp TILDE        &kp LESS_THAN  &kp GREATER_THAN  &kp CARET       &kp PIPE     &kp AMPS       &kp DOLLAR         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp HASH   &trans
&trans  &kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL       &kp GRAVE    &kp BACKSLASH  &kp SINGLE_QUOTE   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp COLON  &trans
&trans  &kp PERCENT      &kp SLASH      &kp ASTERISK      &kp UNDERSCORE  &trans       &trans         &kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AT     &trans
                                        &trans            &trans          &trans       &trans         &trans             &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &alt_tab      &kp N7        &kp N8        &kp N9  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp ESC       &kp N4        &kp N5        &kp N6  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp N3  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };

        bluetooth_layer {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &bt BT_SEL 4  &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };

        gaming_layer {
            bindings = <
&trans  &kp TAB    &kp Q  &kp W   &kp E        &kp R         &kp T      &kp Y             &kp U        &kp I            &kp O       &none
&trans  &kp LSHFT  &kp A  &kp S   &kp D        &kp F         &kp G      &mt LEFT_SHIFT H  &mt RCTRL J  &mt RIGHT_ALT K  &mt RGUI L  &trans
&trans  &kp LCTRL  &kp Z  &kp X   &kp C        &kp V         &kp B      &kp N             &kp M        &kp P            &trans      &trans
                          &trans  &lt 8 SPACE  &kp ESCAPE    &lt 7 TAB  &trans            &trans
            >;
        };

        gaming_nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans     &trans  &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        gaming_num_layer {
            bindings = <
&trans  &trans  &kp N1  &kp N2  &kp N3  &kp N4    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N5  &kp N6  &kp N7  &kp N8    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bluetooth {
            if-layers = <4 1>;
            then-layer = <5>;
        };
    };
};
